export declare namespace UserCenter {
    namespace Ext {
        type CaptchaType = 'login' | 'resetPassword' | 'oauthbind';
        enum SignAction {
            Register = 0,
            Login = 1
        }
        type Property = 'grade' | 'industry' | 'job' | 'scale' | 'source';
        /**
         * 引导状态
         * None = 0       只有老用户在没有进行过引导是默认为 0, 前端自己默认状态，服务端不会返回
         * New = 1        新用户，可以启用引导
         * Old = 2        老用户，可以启动引导
         * Condition = 3  符合条件 可以启用引导
         * Done = 4       引导已完成，不启用
         *
         */
        type GuideStatus = '0' | '1' | '2' | '3' | '4';
        /** web端 新手引导类型，目前针对web端个人版有六个 */
        enum SonaGuideType {
            Global = "global",
            Project = "project",
            Resource = "resource",
            Share = "share",
            Comment = "comment",
            Review = "review",
            AddressBook = "address_book",
            Interaction = "interaction",
            CeoLetter = "ceo_letter",
            Welcome = "welcome",
            TrialNotification = "trial_notification",
            AssetViewFocus = "asset_view_focus",
            AssetViewUploadFocus = "asset_view_upload_focus",
            AssetViewCommentFocus = "asset_view_comment_focus"
        }
        /** 客户端 新手引导类型*/
        enum EkkoGuideType {
            CeoLetter = "ceo_letter"
        }
        /** 小程序端 新手引导类型*/
        enum NeekoGuideType {
            Welcome = "welcome",
            Home = "home",
            Review = "review",
            Video = "video",
            CeoLetter = "ceo_letter"
        }
    }
    namespace Handle {
        namespace RequestParmas {
            interface PasswordSignParams {
                /** 密码 */
                password: string;
                /** 手机号 */
                phone: string;
                region_code: string;
                sm_rid: string;
            }
            interface CodeSignParams {
                phone: string;
                captcha: string;
                inviteid: string;
                _scene?: string;
                ad?: {
                    plate: number;
                    url: string;
                };
                region_code?: string;
            }
            interface PropertyParams {
                path: Ext.Property[];
            }
        }
        namespace Result {
            interface SignResult {
                /** 1代表登陆，0代表注册 */
                action: Ext.SignAction;
                token: string;
            }
        }
    }
    /** user的简易信息 */
    interface BaseItem {
        /** 头像 */
        avatar: string;
        /**  */
        destroy_at: string;
        /** 邮箱 */
        email: string;
        id: string;
        /** 昵称 */
        nickname: string;
        /** 手机号 */
        phone: string;
        region_code: string;
        /** 邀请id */
        shortid: string;
    }
    interface Property {
        grade: string;
        /** 行业 */
        industry: string;
        /** 职位 */
        job: string;
        /** 所在团队规模 */
        scale: string;
        /** 用户来源渠道 */
        source: string;
    }
}
