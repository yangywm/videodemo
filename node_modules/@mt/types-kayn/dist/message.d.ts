import { Base } from "./base";
import { Org } from "./org";
export declare namespace Message {
    namespace Ext {
        interface Complex {
            /** 根据Type类型 比如type= project id = projectId */
            id: string;
            /** 根据Type类型 比如type= project id = project.title */
            name: string;
            /** 操作的是什么 */
            type: string;
            /** 场景：批注 -> 被回复的批注信息 */
            inReplyTo?: Ext.Complex;
        }
        /** message topic */
        enum Reason {
            /** 资产创建 */
            "event.asset.created" = "event.asset.created",
            /** 资产删除 */
            "event.asset.deleted" = "event.asset.deleted",
            /** 版本更新 */
            "event.asset.stacked" = "event.asset.stacked",
            /** 审阅状态变更 */
            "event.asset.status.changed" = "event.asset.status.changed",
            /** 资产重命名 */
            "event.asset.updated" = "event.asset.updated",
            /** 评论状态变更 */
            "event.comment.complete.changed" = "event.comment.complete.changed",
            /** 评论添加 */
            "event.comment.created" = "event.comment.created",
            /** 评论删除 */
            "event.comment.deleted" = "event.comment.deleted",
            /** 项目申请通过 */
            "event.member.accepted" = "event.member.accepted",
            /** 项目申请加入 */
            "event.member.applied" = "event.member.applied",
            /** 项目成员移除 */
            "event.member.deleted" = "event.member.deleted",
            /** 项目邀请 */
            "event.member.invited" = "event.member.invited",
            /** 项目成员加入 */
            "event.member.joined" = "event.member.joined",
            /** 项目成员离开 */
            "event.member.leaved" = "event.member.leaved",
            /** 项目成员申请被拒绝 */
            "event.member.rejected" = "event.member.rejected",
            /** 项目成员权限变更 */
            "event.member.role.changed" = "event.member.role.changed",
            /** 项目删除 */
            "event.project.deleted" = "event.project.deleted",
            /** 项目转让 */
            "event.project.transferred" = "event.project.transferred",
            /** 申请加入团队(团队创建者、管理员 可以接收到） */
            "event.organization.member.applied" = "event.organization.member.applied",
            /** 被添加进团队（被添加者 可以接收到） */
            "event.organization.member.added" = "event.organization.member.added",
            /** 成功加入团队（团队创建者、管理员、申请人 可以接收到） */
            "event.organization.member.joined" = "event.organization.member.joined",
            /**  被移除出团队（团队创建者、管理员、被移除的人 可以接收到） */
            "event.organization.member.deleted" = "event.organization.member.deleted",
            /** 系统消息 */
            System = "21000001",
            /** 评论消息 */
            Comment = "21020002",
            /** 版本变更消息 */
            Version = "21020003"
        }
        enum Type {
            Accept = "Accept",
            Add = "Add",
            Announce = "Announce",
            Arrive = "Arrive",
            Block = "Block",
            Create = "Create",
            Delete = "Delete",
            Dislike = "Dislike",
            Flag = "Flag",
            Follow = "Follow",
            Ignore = "Ignore",
            Invite = "Invite",
            Join = "Join",
            Leave = "Leave",
            Like = "Like",
            Listen = "Listen",
            Move = "Move",
            Offer = "Offer",
            Question = "Question",
            Reject = "Reject",
            Read = "Read",
            Remove = "Remove",
            TentativeReject = "TentativeReject",
            TentativeAccept = "TentativeAccept",
            Travel = "Travel",
            Undo = "Undo",
            Update = "Update",
            View = "View"
        }
    }
    /** ~~废弃~~ */
    interface Item extends Omit<Base.Item, 'deleted_at'> {
        /** 消息类型 */
        reason: Ext.Reason;
        /** ~~操作的是啥~~ */
        type: Ext.Type;
        /** 未读 */
        unread: boolean;
        /** 接收人的ID */
        userId: string;
        /** 已读时间 */
        readAt: string;
        /** 操作人的信息 */
        actor: Omit<Ext.Complex, 'inReplyTo'>;
        /** 操作信息 */
        instrument: Omit<Ext.Complex, 'inReplyTo'>;
        /** 操作信息详情 */
        object: Ext.Complex;
        /** 修改前的信息 */
        origin?: Omit<Ext.Complex, 'inReplyTo'>;
    }
    interface UserBaseItem {
        /** ID */
        id: string;
        /** 类型 */
        type: string;
        /** 名称 */
        name: string;
        /** 内容 */
        content: string;
        /** 内容类型 */
        mediaType: string;
        /** 回复对象 */
        inReplyTo: UserBaseItem;
        /** 图片 */
        image: string;
    }
    interface ContentEntity {
        /** {@Link UserBaseItem} */
        /**
         * 触发事件的用户\
         * {@link UserBaseItem}
         */
        actor: UserBaseItem;
        /**
         * 用户归属\
         * {@link UserBaseItem}
         */
        origin?: UserBaseItem;
        /**
         * 动作实体\
         * {@link UserBaseItem}
         */
        object: UserBaseItem;
        /**
         * 被影响的目标方，例如移动到xx项目\
         * {@link UserBaseItem}
         */
        target?: UserBaseItem;
        /**
         * 团队\
         * {@link UserBaseItem}
         */
        instrument: UserBaseItem;
        /** ~~类型~~ */
        type: string;
    }
    interface MessageEntity {
        /**
         * 消息ID
         */
        id: string;
        /** 发送者 */
        send_id: string;
        /** 接受者 */
        owner_id: string;
        /** 项目 */
        project_id?: string;
        /** topic */
        reason: string;
        /** 团队ID */
        team_id: string;
        unread: boolean;
        /**
         * 消息内容\
         * {@link ContentEntity}
         */
        content: ContentEntity;
        /** 创建时间 */
        created_at: Date | string;
    }
    namespace Person {
        /** 标记已读 */
        interface ReadRequstRequest {
            /** 是否全部 */
            all?: boolean;
            /** 消息ids */
            msg_ids?: string[];
            /** 项目id */
            project_id?: string;
        }
        /** 获取通知列表 */
        interface MessageListRequest {
            /**
             * 消息id/
             * 获取下页数据 传next_msg_id
             * */
            msg_id?: string;
            /** 项目id */
            project_id?: string;
            /** 消息名 */
            reason?: string;
            /** 数量 */
            size: number;
        }
        /**  */
        interface MessageData {
            /** 是否有更多 */
            has_more: number;
            list: MessageEntity[];
            /** 下一个消息id */
            next_msg_id: string;
            /** 上一个消息id */
            prev_msg_id: string;
        }
    }
    namespace Team {
        interface ReadRequstRequest {
            all?: boolean;
            msg_ids?: string[];
            project_id?: string;
        }
        interface MessageListRequest {
            msg_id?: string;
            project_id?: string;
            reason?: string;
            size: number;
            /**
             * 团队类型
             * {@link Org.Ext.Plan}
             */
            team_type: Org.Ext.Plan;
        }
        interface MessageData {
            has_more: number;
            list: MessageEntity[];
            next_msg_id: string;
            prev_msg_id: string;
        }
    }
}
