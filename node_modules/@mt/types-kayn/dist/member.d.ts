import { User } from './user';
import { Project } from './project';
import { Base } from './base';
import { Org } from './org';
import { OrgMember } from './orgMember';
import { Industry } from '.';
export declare namespace Member {
    interface Authority {
        Asset: {
            /** 复制（可复制至项目外） */
            Clone: boolean;
            /** 项目内复制 */
            CloneInProject: boolean;
            /** 创建 */
            Create: boolean;
            /** 删除 */
            Delete: boolean;
            /** 销毁 */
            Destroy: boolean;
            /** 下载 */
            Download: boolean;
            /** 查看 */
            Get: boolean;
            /** 编辑文档 */
            EditDoc: boolean;
            /** 移动（可移动至至项目外） */
            Move: boolean;
            /** 项目内移动 */
            MoveInProject: boolean;
            /** 回收站 */
            Recycle: boolean;
            /** 还原回收站资产 */
            Restore: boolean;
            /** 修改 */
            Update: boolean;
            /** 导入到作品集 */
            SendToWork: boolean;
        };
        Comment: {
            DeleteOther: boolean;
            DeleteSelf: boolean;
            /** 导出 */
            Export: boolean;
            Get: boolean;
            /** 评论 */
            Mark: boolean;
            /** 更新 */
            Update: boolean;
        };
        Member: {
            /** 接受和拒绝成员加入请求 */
            Confirm: boolean;
            /** 管理员审核开关 */
            EditJoinCheck: boolean;
            /** 邀请成员 */
            Invite: boolean;
            /** 删除成员 */
            Remove: boolean;
            /** 修改成员信息 */
            Update: boolean;
            /** 修改成员昵称 */
            UpdateNickname: boolean;
        };
        Project: {
            Delete: boolean;
            /** 离开项目 */
            Leave: boolean;
            /** 转让 */
            Transfer: boolean;
            /** 修改 */
            Update: boolean;
            /** 角色设置 */
            RoleSet: boolean;
            Useless1: boolean;
            Useless2: boolean;
            /** 数据报表 */
            DataReport: boolean;
        };
        Review: {
            /** 创建 */
            Create: boolean;
            /** 删除 */
            Delete: boolean;
            /** 删除其他人批注 */
            DeleteOtherComment: boolean;
            /** 删除自身批注 */
            DeleteSelfComment: boolean;
            GetOther: boolean;
            GetSelf: boolean;
            /** 修改审阅状态 */
            SetAssetLabel: boolean;
            /** 修改别人 */
            UpdateOther: boolean;
            /** 修改自己 */
            UpdateSelf: boolean;
            Useless1: boolean;
            /** 编辑批注 */
            OperateComment: boolean;
        };
    }
    interface Myself extends Member.Item {
        Authority: Authority;
    }
    namespace Ext {
        /** 消息设置 */
        interface Notifications {
            /** 文件状态变更 */
            event_asset_created: boolean;
            /** 新评论 */
            event_comment_created: boolean;
            /** 新成员加入 */
            event_member_accepted: boolean;
            /** 消息机器人 */
            robot_state: boolean;
        }
        enum Role {
            /** 申请中 */
            APPLICANT = 0,
            /** 可编辑 */
            EDITOR = 1,
            /** 管理员 */
            ADMIN = 2,
            /** 群主 */
            OWNER = 3,
            /** 项目中可查看 */
            COLLABORATOR = 4,
            /** 团队资源库中可查看 */
            DISK_VIEWER = 5,
            /** 团队资源库中可编辑 */
            DISK_EDITOR = 6,
            /** 外部协作者 */
            EXTERNAL_COLLABORATOR = 7
        }
    }
    namespace Param {
        interface Update {
            id?: string;
            /** 标签（如制片人） */
            label?: string;
            /**
             * {@link Ext.Role}
             */
            role?: Ext.Role;
            nickname?: string;
            /**
             * 消息设置
             * {@link Ext.Notifications}
             */
            notifications?: Ext.Notifications;
        }
    }
    /**
     * 项目成员的简易信息
     */
    interface BaseItem {
        id: string;
        nickname: string;
    }
    interface MemberInfos {
        /**
         * 用户在项目中的信息
         * {@link BaseItem}
         */
        project_member: BaseItem | null;
        /**
         * 用户在团队中的信息
         * {@link Org.HasJobOrgMember}
         */
        org_member: Org.HasJobOrgMember | null;
    }
    interface Item extends Base.Item {
        /** 标签（如制片人） */
        label: string;
        nickname: string;
        /**
         * 消息设置
         * {@link Ext.Notifications}
         */
        notifications: Ext.Notifications;
        /** 所在项目id */
        project_id: string;
        /**
         * 角色权限
         * {@link Ext.Role}
         */
        role: Ext.Role;
        /** 成员对应的用户id */
        user_id: string;
        /**
         * 成员信息
         * {@link User.Item}
         */
        user?: User.Item;
        /**
         * 邀请人信息
         */
        invite_user?: {
            id: 'string';
            nickname: 'string';
        } | null;
        project?: Project.Item | null;
        /** 组织成员id */
        org_member_id: string;
        /**
         * 成员的身份信息
         * {@link Org.HasJobOrgMember}
         */
        org_member: Org.HasJobOrgMember;
        inviter_info: {
            org_member: Org.HasJobOrgMember;
            project_member: {
                id: string;
                nickname: string;
            };
        };
    }
    interface ItemWithForeignKeys extends Item {
        user: User.Item;
    }
    /** 新成员基础信息 */
    interface NewBaseItem {
        id: string;
        /** 名称 */
        nickname: string;
        /** 角色 */
        role: Ext.Role;
        /** 是否被删除 */
        is_delete: boolean;
        /** 组织成员id */
        org_member_id: string;
        /**
         * 成员的身份信息
         */
        org_member: NewHasJobOrgMember & {
            role?: number;
        };
        /** 成员信息 */
        user: {
            id: string;
        };
        /**
         * 审核后的角色权限
         * {@link Ext.Role}
         */
        role_after_audit: Ext.Role;
    }
    /** 新组织成员信息(基础+行业信息)  */
    type NewHasJobOrgMember = {
        org: Pick<Org.BaseItem, 'id' | 'name' | 'plan'>;
        /** 职业信息 */
        jobs: Industry.Job[];
    } & Omit<OrgMember.BaseItem, 'avatar'>;
    /**  新项目成员信息 */
    interface NewItemWithForeignKeys extends NewBaseItem {
        /** 邀请人信息 */
        invite_info: NewBaseItem | null;
    }
    /**  新项目成员数 */
    interface MemberCount {
        /** 申请中成员，如果没有管理权限，则该值始终为0 */
        applicant: number;
        /** 正常成员 */
        member: number;
    }
}
