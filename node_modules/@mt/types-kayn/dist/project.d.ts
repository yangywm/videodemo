import { Org } from './org';
import { User } from './user';
export declare namespace Project {
    namespace Ext {
        /** 权限 */
        interface Properties {
            /** 分享 */
            files_sharers: number[];
            /** 邀请 */
            members_inviter: number[];
            /** 文件管理 */
            files_manager: number[];
            /** 成员加入 */
            members_join_check: boolean;
            /** 水印 */
            is_watermark?: boolean;
            /** 使用昵称 */
            use_nickname?: boolean;
            /**
             * 是否允许关闭分享水印
             * 可以理解为allow_close_share_watermark
             */
            is_share_watermark?: boolean;
            /** 水印文字 */
            watermark_text?: string;
            /** 标记颜色 */
            color_mark: string;
            /** 外部链接 */
            url?: string;
            /** 数据看板 */
            data_report?: boolean;
        }
        /** 项目身上的标签(供应商、状态) */
        interface Tags {
            state?: Tag | null;
            supplier?: Tag[] | null;
            group?: Tag | null;
        }
        /** 项目身上的标签Item */
        interface Tag {
            id: string;
            sort: number;
            title: string;
        }
    }
    namespace Param {
        interface Create {
            /** 标题 */
            title: string;
            /** 描述 */
            description?: string;
            /**
             * 动态扩展信息
             */
            properties?: Ext.Properties;
            /** 项目logo */
            logo?: string;
            /** 流程id */
            flow_id?: string;
            /** tags */
            tags?: {
                group_id?: string;
            };
        }
        interface Update {
            title?: string;
            description?: string;
            cover?: string;
            private?: boolean;
            properties?: Ext.Properties;
            tags?: {
                group_id?: string;
            };
        }
    }
    interface Base {
        id: string;
        title: string;
        member_count: number;
    }
    interface BaseItem extends Base {
        id: string;
        title: string;
        created_at: string;
        description: string;
        logo?: string;
        logo_url: string;
    }
    /** 该项目对应的团队信息 */
    type ProjectOrgInfo = {
        /** 权限 */
        properties?: Org.Ext.Properties;
        /** 隐私管理 */
        property_info?: {
            /** 隐私管理属性-展示非团队内部成员所属组织名称 */
            [`privacy.external_memberorg_hidden`]: string;
            /** 隐私管理属性-展示分享链接创建者和创建时间 */
            [`privacy.link_createtime_hidden`]: string;
            /** 隐私管理属性-展示分享链接文件创建时间 */
            [`privacy.link_filetime_hidden`]: string;
            /** 隐私管理属性-展示分享链接文件创建者 */
            [`privacy.link_filecreator_hidden`]: string;
        };
    } & Org.BaseItem;
    interface Item extends BaseItem {
        updated_at: string;
        last_active_at: string;
        asset_update_at: string;
        /** 项目封面图地址 */
        cover: string;
        /** 项目文件总数 */
        file_count: number;
        /** 项目目录总数 */
        folder_count: number;
        /** 邀请链接 */
        invite_url: string;
        logo_file_id: string;
        /** 项目归属组织id */
        org_id: string;
        /** 组织成员id */
        org_member_id: string;
        member_nickname: string;
        /** 所属者id */
        owner_id: string;
        /** 容量 */
        quota: string;
        /** 回收站容量 */
        quota_recybin: string;
        /** 是否为私有 */
        private: boolean;
        /**
         * 动态扩展属性
         * {@link Ext.Properties}
         */
        properties: Ext.Properties;
        /** 项目文件根挂载点 */
        root_asset_id: string;
        /** 是否为置顶 */
        sticky: boolean;
        /**
         * 成员的身份信息
         * {@link Org.HasJobOrgMember}
         */
        org_member: Org.HasJobOrgMember;
        org: ProjectOrgInfo;
        /**
         * 用户在项目中的信息
         * {@link User.BaseItem}
         */
        project_member: User.BaseItem;
        /** 当前org_member是否在当前项目中 */
        exist_in_project: boolean;
        /** 占用席位数 */
        seats: string;
        /** 所在分组id，当不属于任何分组时，为'0' */
        group_id: string;
        /** 项目身上的标签(供应商、状态) */
        tags: Ext.Tags;
    }
    /** 公开项目信息 */
    interface PubItem extends Item {
        /** 自定义品牌展示图 */
        brandlogo: string;
    }
    type OrgProjectItem = ItemWithForeignKeys & {
        /** 最后一次登录信息 */
        last_active_at: string;
        /** 分享次数 */
        share_count: number;
    };
    type ItemWidthTogether = BaseItem & {
        logo_file_id: string;
    };
    interface ItemWithForeignKeys extends Item {
        /** 所属者信息 */
        owner: User.Item;
        /** 所在项目分组信息 */
        group: {
            /** 分组id */
            id: string;
            /** 分组排序 */
            sort: number;
            /** 分组名 */
            title: string;
        };
    }
    /** 创建的项目 */
    interface CreateItem {
        /** 项目名 */
        name: string;
        /** 在项目中设置的昵称 */
        personal_nickname: string;
        /** 项目id */
        project_id: string;
        /** 容量 */
        used: string;
    }
    /**
     * @param rerfer 项目列表使用，带身份
     */
    interface ItemWithIdentity {
        created_at: string;
        id: string;
        nickname: string;
        /**
         * 成员的身份信息
         */
        org_member: Org.HasJobOrgMember;
        org_member_id: string;
        project: Item;
        project_id: string;
        role: number;
    }
    /**
     * 兼容， 看到了之后记得替换，没有mainkeys这个类型了
     */
    type ItemWithMainKeys = ItemWithIdentity;
    /**
     * @param rerfer 带org
     */
    interface ItemWithOrg {
        activated: boolean;
        avatar: string;
        id: string;
        nickname: string;
        org: Org.BaseItem;
    }
    interface OrgProjectContactItem extends BaseItem {
        /** 最后一次登录信息 */
        last_active_at: string;
        /** 分享次数 */
        share_count: number;
        /** 所属者信息 */
        owner: User.Item;
    }
    /** 自定义审阅状态列表子项状态 0禁用 1启用中 */
    enum MarkState {
        /**  1启用中 */
        ENABLE = "1",
        /**  0禁用 */
        DISABLE = "0"
    }
    /** 项目中的自定义审阅状态列表子项 */
    interface MarkItem {
        /** 自定义审阅状态列表子项颜色 */
        color: string;
        /** 自定义审阅状态列表子项ID */
        id: string;
        /** 自定义审阅状态列表子项状态 0禁用 1启用中 */
        state: MarkState;
        /** 自定义审阅状态列表子项名称 */
        title: string;
    }
    /** 项目中的自定义审阅状态列表子项，包含标签下包含的素材数 */
    interface MarkWithCountItem extends Project.MarkItem {
        /** 标签下包含的素材数 */
        count: number;
    }
    interface ItemWithGroup extends Project.Item {
        group_id: string;
    }
    /** 项目分组 */
    interface Group {
        /** 分组id */
        id: string;
        /** 组织id */
        org_id: string;
        /** 分组名 */
        title: string;
        properties: null;
        /** 共被多少个项目使用 */
        used: number;
        /** 创建时间 */
        created_at: string;
        /** 更新时间 */
        updated_at: string;
        /** 被删除时间 */
        deleted_at: string;
    }
}
