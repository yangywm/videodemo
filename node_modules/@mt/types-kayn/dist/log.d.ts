import { Flow, Link, Member } from '.';
import { Dept, Review } from '.';
import { OrgMember, Project } from '.';
import { Asset } from '.';
export declare namespace Log {
    namespace Ext {
        /** 审阅状态 */
        export enum MarkType {
            /** 重置 */
            DEFAULT = 0,
            /** 待审阅 */
            PENDING = 1,
            /** 审阅中 */
            PROCESSING = 2,
            /** 意见汇总完毕 */
            CHECKEND = 3,
            /** 通过 */
            APPROVED = 4,
            /** 自定义 */
            CUSTOMIZE_1 = 5,
            /** 自定义 */
            CUSTOMIZE_2 = 6
        }
        /** 自定义审阅状态类型 */
        export enum CustomMarkType {
            /** 开启 */
            Open = 0,
            /** 关闭 */
            Close = 1
        }
        enum OrgMemberRole {
            /** 成员 */
            MEMBER = 1,
            /** 管理员 */
            ADMIN = 2,
            /** 创建者 */
            CREATOR = 3
        }
        /** 下载类型 */
        export enum DownloadType {
            /** 未知文件 */
            UNKNOW = 0,
            /** 资产 */
            ASSET = 1,
            /** 缩略图 */
            THUMBNALS = 2,
            /** 代理文件 */
            PROXYFILE = 3
        }
        /** 资产信息 */
        export interface LogAsset {
            /** 资产id */
            id: string;
            /** 媒体类型 */
            catetory: Asset.Ext.Category;
            /** 资产名称 */
            name: string;
            /** 审核状态标签 */
            mark: MarkType;
            /** 资产名称 */
            title: string;
            /** 资产类型 */
            type: Asset.Ext.Type;
            /** 版本 */
            rank: number;
            /** 自定义审阅状态名称 */
            mark_des: string;
            /** 审阅状态id */
            mark_id: string;
        }
        /** 评论信息 */
        export interface LogComment {
            /** 资产id */
            asset_id: string;
            /** 评论 */
            id: string;
            /** 评论创建人的身份ID */
            org_member_id: string;
            /** 上级id */
            parent_id: string;
            /** 评论文本 */
            text: string;
            completed: boolean;
        }
        /** 下载信息 */
        export interface LogDownload {
            /** 资产id */
            asset_id: string;
            /** 名称 */
            title: string;
            /** 下载类型 */
            type: DownloadType;
            /** 资产类型 */
            asset_type: Asset.Ext.Type;
        }
        export interface LogOrgBase {
            /** 地址 */
            address: string;
            /** 组织id */
            id: string;
            /** 行业id */
            industry_id: string;
            /** 行业名称 */
            industry_name: string;
            /** 规模 */
            scale: string;
        }
        /** 组织信息 */
        export interface LogOrg extends LogOrgBase {
            /** 团队负责人 */
            owner_org_member: LogOrgMember;
        }
        export enum LogOrgInvite {
            /** 无需审批 */
            Invite = "invite",
            /** 通过审批 */
            Approval = "approval"
        }
        /** 组织成员信息 */
        export interface LogOrgMember {
            /** 手机号邀请的用户是否激活 */
            activated: boolean;
            /** 微信头像 */
            avatar_url: string;
            id: string;
            /** 名称 */
            nickname: string;
            /** 组织id */
            org_id: string;
            /** 团队成员角色 */
            role: OrgMemberRole;
            /** 加入团队方式 */
            join_type: LogOrgInvite;
        }
        /** 项目信息 */
        export interface LogProject {
            /** 项目描述 */
            description: string;
            /** 项目id */
            id: string;
            /** 项目logo */
            logo_url: string;
            /** 组织id */
            org_id: string;
            /** 组织成员id */
            org_member_id: string;
            /** 动态扩展属性 */
            properties: Project.Ext.Properties;
            /** 项目名 */
            title: string;
        }
        /** 项目成员信息 */
        export interface LogProjectMember {
            /** 自定义名称 */
            custom_nickname: string;
            id: string;
            /** 昵称 */
            nickname: string;
            /** 组织成员id */
            org_member_id: string;
            /** 权限 */
            role: Member.Ext.Role;
        }
        /** 自定义审阅类型 */
        export interface LogProjectMark {
            id: string;
            /** 排序 */
            sort: number;
            /** 状态 */
            state: CustomMarkType;
            /** 名称 */
            title: string;
        }
        /** 操作主体类型 */
        export enum LogType {
            /** 未知 */
            UNKNOW = 0,
            /** 资产 */
            ASSET = 1,
            /** 项目 */
            PROJECT = 2,
            /** 组织 */
            ORG = 3,
            /** 团队资源库 */
            TEAM_RESOURCE = 4,
            /** 个人资源库 */
            PERSONAL_RESOURCE = 5,
            /** 团队成员 */
            TEAM_MEMBER = 6,
            /** 项目成员 */
            PROJECT_MEMBER = 7,
            /** 团队部门 */
            TEAM_DEPARTMENT = 8,
            /** 项目分享 */
            PROJECT_SHARE = 9,
            /** 个人资源库分享 */
            PERSONAL_RESOURCE_SHARE = 10,
            /** 批注 */
            COMMENT = 11,
            /** 团队分组成员 */
            TEAM_GOURP_MEMBER = 12,
            /** 下载 */
            DOWNLOAD = 13,
            /** 文件收集 */
            FILE_COLLECT = 19,
            /** 流程 */
            Flow = 23,
            /** 项目流程 */
            ProjectFlow = 24,
            /** 流程节点 */
            FlowNode = 25,
            /** 流程节点任务 */
            FlowNodeTask = 26,
            /** 流程节点任务成员 */
            FlowTplNodeMember = 27
        }
        /** 部门成员信息 */
        export interface LogDeptMember {
            role: OrgMember.Ext.Role;
            /** 组织id */
            org_id: string;
            /** 昵称 */
            nickname: string;
            id: string;
            /** 微信头像 */
            avatar_url: string;
            /** 手机号邀请的用户是否激活 */
            activated: boolean;
            /** 所在的分组 */
            activity: {
                /** 分组id */
                id: string;
                /** 部门层级，顶级部门为0 */
                level: number;
                /** 部门成员数 */
                member_count: number;
                /** 部门名称 */
                name: string;
                /** 组织ID */
                org_id: string;
            };
        }
        export {};
    }
    /** 获取日志参数 */
    interface Param {
        /** 操作类型 */
        action?: string;
        /** 起始时间 */
        start_time?: number;
        /** 开始时间 */
        end_time?: number;
        /** org_id */
        id: string;
        /** 页数 */
        page?: number;
        /** 每页数量 */
        pageSize?: number;
        /** 操作人员id集合 */
        org_member_id?: string;
        /** vfs_id 集合 */
        vfs_member_id?: string;
    }
    interface BaseOperator {
        /** 头像 */
        avatar_url: string;
        /** org_member_id */
        id: string;
        /** 昵称 */
        nickname: string;
        org: {
            /** 团队id */
            id: string;
            /** 团队名称 */
            name: string;
            /** 团队套餐 */
            plan: string;
        };
    }
    interface BaseItem {
        /** 操作日志唯一标识 */
        uuid?: string;
        /** 操作类型 */
        action: number;
        /** 操作时间 */
        operate_at: number;
        /** 组织id */
        org_id: string;
        /** 操作人信息 */
        operator: {
            vfs_member?: LogVfsOperator;
            org_member: LogOrgOperator;
        };
    }
    /** 自定义logo类型操作 */
    enum CustomLogoOpration {
        /** 自定义团队logo */
        ORG_LOGO = "orglogo.logo",
        /** 自定义团队logo开关 */
        ORG_SWITCH = "orglogo.switch",
        /** 自定义团队logo名称 */
        ORG_ORGNAME = "orglogo.orgname",
        /** 自定义分享链接logo */
        SHARE_LOGO = "sharelogo.logo",
        /** 自定义分享链接logo开关 */
        SHARE_SWITCH = "sharelogo.switch",
        /** 自定义分享链接logo名称 */
        SHARE_ORGNAME = "sharelogo.orgname",
        /** 自定义品牌展示封面 */
        BRAND_LOGO = "brandlogo.logo",
        /** 自定义品牌展示封面开关 */
        BRAND_SWITCH = "brandlogo.switch",
        /** 自定义小程序分享链接封面 */
        MP_SHARE_LOGO = "mp_sharelogo.logo",
        /** 自定义小程序分享链接封面开关 */
        MP_SHARE_SWITCH = "mp_sharelogo.switch",
        /** 自定义小程序团队邀请链接封面 */
        MP_ORG_INVITE_LOGO = "mp_orginvitelogo.logo",
        /** 自定义小程序团队邀请链接封面开关 */
        MP_ORG_INVITE_SWITCH = "mp_orginvitelogo.switch",
        /** 自定义小程序项目邀请链接封面 */
        MP_PROJECT_INVITE_LOGO = "mp_projectinvitelogo.logo",
        /** 自定义小程序项目邀请链接封面开关 */
        MP_PROJECT_INVITE_SWITCH = "mp_projectinvitelogo.switch"
    }
    interface BaseContent {
        asset?: Ext.LogAsset;
        comment?: Ext.LogComment;
        download?: Ext.LogDownload;
        id: string;
        name: string;
        org?: Ext.LogOrg;
        org_department?: Dept.Item;
        org_department_member?: Ext.LogDeptMember;
        org_member?: Ext.LogOrgMember;
        project?: Ext.LogProject;
        project_member?: Ext.LogProjectMember;
        project_mark?: Ext.LogProjectMark;
        review?: Review.Item;
        link_collect?: Link.ItemWithCollectForeignKeys;
        link_delivery?: Link.ItemWithDeliveryForeignKeys;
        type: Ext.LogType;
        /** 容量信息 */
        quota?: {
            /** orgMemberId */
            biz_id: string;
            /** 容量 */
            total_quota: number;
            nickname: string;
        };
        /** 品牌管理相关信息 */
        extend_attr?: {
            [CustomLogoOpration.ORG_LOGO]?: string;
            [CustomLogoOpration.ORG_SWITCH]?: string;
            [CustomLogoOpration.ORG_ORGNAME]?: string;
            [CustomLogoOpration.SHARE_LOGO]?: string;
            [CustomLogoOpration.SHARE_SWITCH]?: string;
            [CustomLogoOpration.SHARE_ORGNAME]?: string;
            [CustomLogoOpration.BRAND_LOGO]?: string;
            [CustomLogoOpration.BRAND_SWITCH]?: string;
            [CustomLogoOpration.MP_SHARE_LOGO]?: string;
            [CustomLogoOpration.MP_SHARE_SWITCH]?: string;
            [CustomLogoOpration.MP_ORG_INVITE_LOGO]?: string;
            [CustomLogoOpration.MP_ORG_INVITE_SWITCH]?: string;
            [CustomLogoOpration.MP_PROJECT_INVITE_LOGO]?: string;
            [CustomLogoOpration.MP_PROJECT_INVITE_SWITCH]?: string;
        };
        /** 流程 */
        flow?: {
            flow_id: string;
            flow_name: string;
            org_id: string;
        };
        /** 流程节点 */
        flow_node?: {
            color: string;
            flow_id: string;
            flow_name: string;
            group: Flow.Ext.NodeGroup;
            node_id: string;
            node_name: string;
            org_id: string;
            sort: string;
        };
        flow_tpl_node_member?: {
            flow_id: string;
            member_id: string;
            node_id: string;
            node_name: string;
            org_id: string;
            org_member_id: string;
            project_id: string;
            project_name: string;
            tpl_audit_type: Flow.Ext.AuditType;
            tpl_node_task_id: string;
            tpl_node_task_member_id: string;
            tpl_task_type: Flow.Ext.NodeTaskType;
        };
        flow_node_task?: {
            flow_id: string;
            node_id: string;
            node_name: string;
            org_id: string;
            project_id: string;
            project_name: string;
            tpl_audit_type: Flow.Ext.AuditType;
            tpl_node_task_id: string;
            tpl_task_type: Flow.Ext.NodeTaskType;
        };
        project_flow?: {
            flow_id: string;
            flow_name: string;
            id: string;
            org_id: string;
            project_id: string;
            project_name: string;
        };
    }
    interface LogVfsOperator extends BaseOperator {
        /** 外部成员 */
        is_outsider: boolean;
    }
    interface LogOrgOperator extends BaseOperator {
        /** 是否删除 */
        is_deleted: boolean;
    }
    /** 操作人员 */
    interface LogOperator {
        /** vfs信息 */
        vfs_member?: LogVfsOperator;
        /** org信息 */
        org_member: LogOrgOperator;
    }
    /** 操作类型 */
    interface LogAction {
        /** 操作名 */
        action_name: string;
        /** 操作类型 */
        action_type: number;
    }
    /** 操作日志列表信息 */
    interface Item extends BaseItem {
        /** 操作信息 */
        content: {
            /** 操作前信息 */
            origin?: BaseContent[];
            /** 操作后信息 */
            result?: BaseContent[];
            /** 操作前的目录信息 */
            source?: BaseContent[];
            /** 操作后的目录信息 */
            target?: BaseContent[];
        };
    }
}
